openapi: 3.0.0
info:
  title: Pulse API
  description: ""
  version: 0.0.0
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: User Login
      operationId: login
      requestBody:
        $ref: "#/components/requestBodies/LoginBody"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /monitors:
    get:
      tags:
        - monitor
      summary: List Monitors
      operationId: listMonitors
      security:
        - bearerAuth: []
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Monitor"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - monitor
      summary: Create Monitor
      operationId: createMonitor
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/CreateMonitorBody"
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /monitors/{id}:
    get:
      tags:
        - monitor
      summary: Get Monitor by ID
      operationId: getMonitorById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Monitor ID
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Monitor"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - monitor
      summary: Delete Monitor
      operationId: deleteMonitor
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Monitor ID
      responses:
        "204":
          description: Monitor deleted successfully
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ValidationMessage:
      required:
        - message
        - type
      type: object
      properties:
        message:
          type: string
        type:
          type: string
        path:
          type: array
          items:
            type: string
    ErrorResponse:
      required:
        - statusCode
        - message
        - validationMessages
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
        validationMessages:
          type: array
          items:
            $ref: "#/components/schemas/ValidationMessage"
    WithId:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    WithName:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    WithMonitorType:
      required:
        - monitorType
      type: object
      properties:
        monitorType:
          type: string
          enum:
            - http
    Monitor:
      allOf:
        - $ref: "#/components/schemas/WithId"
        - $ref: "#/components/schemas/WithName"
        - $ref: "#/components/schemas/WithMonitorType"
    CreateMonitorPayload:
      allOf:
        - $ref: "#/components/schemas/WithName"
        - $ref: "#/components/schemas/WithMonitorType"
    WithUsername:
      required:
        - username
      type: object
      properties:
        username:
          type: string
    WithPassword:
      required:
        - password
      type: object
      properties:
        password:
          type: string
    LoginPayload:
      allOf:
        - $ref: "#/components/schemas/WithUsername"
        - $ref: "#/components/schemas/WithPassword"
    WithToken:
      required:
        - token
      type: object
      properties:
        token:
          type: string
    LoginResponse:
      allOf:
        - $ref: "#/components/schemas/WithToken"
        - $ref: "#/components/schemas/WithUser"
    User:
      allOf:
        - $ref: "#/components/schemas/WithId"
        - $ref: "#/components/schemas/WithUsername"
    WithUser:
      required:
        - user
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
  requestBodies:
    LoginBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginPayload"
    CreateMonitorBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateMonitorPayload"
  responses:
    BadRequestError:
      description: "400"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    UnauthorizedError:
      description: "401"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFoundError:
      description: "404"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: "500"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
