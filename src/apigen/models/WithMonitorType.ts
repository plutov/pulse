/* tslint:disable */
/* eslint-disable */
/**
 * Pulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WithMonitorType
 */
export interface WithMonitorType {
    /**
     * 
     * @type {string}
     * @memberof WithMonitorType
     */
    monitorType: WithMonitorTypeMonitorTypeEnum;
}


/**
 * @export
 */
export const WithMonitorTypeMonitorTypeEnum = {
    http: 'http'
} as const;
export type WithMonitorTypeMonitorTypeEnum = typeof WithMonitorTypeMonitorTypeEnum[keyof typeof WithMonitorTypeMonitorTypeEnum];


/**
 * Check if a given object implements the WithMonitorType interface.
 */
export function instanceOfWithMonitorType(value: object): value is WithMonitorType {
    if (!('monitorType' in value) || value['monitorType'] === undefined) return false;
    return true;
}

export function WithMonitorTypeFromJSON(json: any): WithMonitorType {
    return WithMonitorTypeFromJSONTyped(json, false);
}

export function WithMonitorTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WithMonitorType {
    if (json == null) {
        return json;
    }
    return {
        
        'monitorType': json['monitorType'],
    };
}

export function WithMonitorTypeToJSON(json: any): WithMonitorType {
    return WithMonitorTypeToJSONTyped(json, false);
}

export function WithMonitorTypeToJSONTyped(value?: WithMonitorType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'monitorType': value['monitorType'],
    };
}

